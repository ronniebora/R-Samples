#declare the url of european bank
url <- "http://www.ecb.europa.eu/stats/eurofxref/eurofxref-hist.zip"
#download the the file
download.file(url, "eurofxref-hist.zip")
rates <- read.csv(unz("eurofxref-hist.zip", "eurofxref-hist.csv"), header = T)
#check your data
class(rates)
head(rates)
tail(rates)
rates[1:2,]#check only two rows of data
#check the format of the dates in the data
str(rates$Date)#this is in factor level of 4457 obs
#Convert this into Date format
rates$Date <- as.Date(rates$Date, "%Y-%m-%d")
#check the format of the dates in the data
str(rates$Date)#this is in date level of 1:4457 obs
#Check Range of Dates
range(rates$Date)
#Sort the dates in acs order
rates <- rates[order(rates$Date), ]
## plot time series
plot(rates$Date, rates$AUD, type = "l")
#Extract the data
rates_aud<-rates[,27]        
rates_inr<-rates[,33]
#lets plot using GGplot2
library(ggplot2)
?ggplot#check documentation
g <- ggplot(data = rates,aes ( x = Date, y = AUD))#load and intialize data
g + geom_point(colour = 'blue', size = 1)#plotting

head(rates$Date, 20)#There are no data for weekends or public holidays.
#we will go ahead and pool the data into year by values , hence tabulate it
years <- format(rates$Date, "%Y")
tab <- table(years)
tab # gives count of occurances for each year, which is logically the number of working dates the currency value is captured
## Average number of days per year after removing 2016 part
mean(tab[1:(length(tab) - 1)])# this gives the MEAN which is the WINDOW Size. This goes into your Forecast.R fucction

head(rates_aud)
head(rates_inr)

library(forecast)

result.arima_aud <- forecastArima(rates, n.ahead = 90)
forecast_aud_plot <- plotForecastResult(result.arima_aud, title = "Exchange rate AUD forecasting with ARIMA")
result.arima_inr <- forecastArima_inr(rates, n.ahead = 90)
forecast_inr_plot<- plotForecastResult(result.arima_inr, title = "Exchange rate INR forecasting with ARIMA")

result.stl <- forecastStl(rates, n.ahead = 90)
plotForecastResult(result.stl, title = "Exchange rate AUD forecasting with STL")

## exchange rate in 2016
result <- subset(result.stl, date >= "2016-01-01")
head(result)
plotForecastResult(result, title = "Exchange rate forecasting with STL (2016)")
